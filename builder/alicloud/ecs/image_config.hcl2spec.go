// Code generated by "hcl2-schema"; DO NOT EDIT.\n

package ecs

import (
	"github.com/hashicorp/hcl2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

func (*AlicloudDiskDevice) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"DiskName":           &hcldec.AttrSpec{Name: "disk_name", Type: cty.String, Required: false},
		"DiskCategory":       &hcldec.AttrSpec{Name: "disk_category", Type: cty.String, Required: false},
		"DiskSize":           &hcldec.AttrSpec{Name: "disk_size", Type: cty.Number, Required: false},
		"SnapshotId":         &hcldec.AttrSpec{Name: "disk_snapshot_id", Type: cty.String, Required: false},
		"Description":        &hcldec.AttrSpec{Name: "disk_description", Type: cty.String, Required: false},
		"DeleteWithInstance": &hcldec.AttrSpec{Name: "disk_delete_with_instance", Type: cty.Bool, Required: false},
		"Device":             &hcldec.AttrSpec{Name: "disk_device", Type: cty.String, Required: false},
		"Encrypted":          &hcldec.AttrSpec{Name: "disk_encrypted", Type: cty.Bool, Required: false},
	}
	return s
}

func (*AlicloudDiskDevices) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"system_disk_mapping": &hcldec.BlockObjectSpec{TypeName: "AlicloudDiskDevice", LabelNames: []string(nil), Nested: hcldec.ObjectSpec((&AlicloudDiskDevices{}).ECSSystemDiskMapping.HCL2Spec())},
		"image_disk_mappings": &hcldec.BlockObjectSpec{TypeName: "[]AlicloudDiskDevice", LabelNames: []string(nil), Nested: hcldec.ObjectSpec((&AlicloudDiskDevices{}).ECSImagesDiskMappings.HCL2Spec())},
	}
	return s
}
