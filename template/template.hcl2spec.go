// Code generated by "hcl2-schema"; DO NOT EDIT.\n

package template

import (
	"github.com/hashicorp/hcl2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

func (*Provisioner) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"Type":        &hcldec.AttrSpec{Name: "type", Type: cty.String, Required: false},
		"PauseBefore": &hcldec.AttrSpec{Name: "pause_before", Type: cty.String, Required: false},
		"Timeout":     &hcldec.AttrSpec{Name: "timeout", Type: cty.String, Required: false},
	}
	for k, v := range (&Provisioner{}).OnlyExcept.HCL2Spec() {
		s[k] = v
	}
	return s
}

func (*OnlyExcept) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"Only":   &hcldec.AttrSpec{Name: "only", Type: cty.List(cty.String), Required: false},
		"Except": &hcldec.AttrSpec{Name: "except", Type: cty.List(cty.String), Required: false},
	}
	return s
}
